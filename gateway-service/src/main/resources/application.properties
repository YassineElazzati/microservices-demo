# ðŸ‘‰ Le port sur lequel ton Gateway va tourner
server.port=8080

# ==========================
# ROUTES DU API GATEWAY
# ==========================

# âž¤ Route vers le microservice user
# ID unique pour la route (utile pour les logs ou filtres conditionnels)
spring.cloud.gateway.routes[0].id=user-service
# L'URI de destination : oÃ¹ le trafic doit aller (ici, le service tourne sur le port 8081)
spring.cloud.gateway.routes[0].uri=http://localhost:8081
# Le prÃ©dicat : si l'URL commence par /users/**, on redirige vers le service user
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**

# âž¤ Route vers le microservice order
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=http://localhost:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/orders/**

# ==========================
# LOGS
# ==========================

# âž¤ Active les logs dÃ©taillÃ©s pour Spring Cloud Gateway
logging.level.org.springframework.cloud.gateway=DEBUG

# ==========================
# MODE RÃ‰ACTIF
# ==========================

# âž¤ Force Spring Boot Ã  utiliser WebFlux au lieu de Spring MVC (obligatoire pour Gateway)
spring.main.web-application-type=reactive
